import { content } from "./content";
import { uri } from "./img";

import { Markdown, TechType } from "@/types/markdown";

export const techTypeHeadings: Record<TechType, string> = {
  [TechType.markUpLang]: "MarkUp Languages",
  [TechType.styleSheet]: "Stylesheet Languages and Frameworks",
  [TechType.programmingLang]: "Programming Languages",
  [TechType.devOps]: "Dev Ops",
  [TechType.webDev]: "Web Development Frameworks",
  [TechType.database]: "Databases and ORMs",
  [TechType.mobileDev]: "Mobile Development Frameworks",
  [TechType.desktopDev]: "Desktop Development Frameworks",
  [TechType.others]: "Other Technologies",
};

export const markdown: Markdown[] = [
  {
    name: "Angular",
    content: content.angular,
    uri: uri.angular,
    route: "angular",
    type: TechType.webDev,
  },
  {
    name: "Bash",
    content: content.bash,
    uri: uri.bash,
    route: "bash",
    type: TechType.programmingLang,
  },
  {
    name: "CSS",
    content: content.css,
    uri: uri.css,
    route: "css",
    type: TechType.styleSheet,
  },
  {
    name: "Docker",
    content: content.docker,
    uri: uri.docker,
    route: "docker",
    type: TechType.devOps,
  },
  {
    name: "Flask",
    content: content.flask,
    uri: uri.flask,
    route: "flask",
    canInvert: true,
    type: TechType.webDev,
  },
  {
    name: "Git",
    content: content.git,
    uri: uri.git,
    route: "git",
    type: TechType.devOps,
  },
  {
    name: "GraphQL",
    content: content.graphQL,
    uri: uri.graphQL,
    route: "graphql",
    type: TechType.others,
  },
  {
    name: "HTML",
    content: content.html,
    uri: uri.html,
    route: "html",
    type: TechType.markUpLang,
  },
  {
    name: "Javascript",
    content: content.javascript,
    uri: uri.javascript,
    route: "javascript",
    type: TechType.programmingLang,
  },
  {
    name: "LaTeX",
    content: content.latex,
    uri: uri.latex,
    route: "latex",
    canInvert: true,
    type: TechType.markUpLang,
  },
  {
    name: "Mojo",
    content: content.mojo,
    uri: uri.mojo,
    route: "mojo",
    type: TechType.programmingLang,
  },
  {
    name: "MongoDB",
    content: content.mongoDB,
    uri: uri.mongoDB,
    route: "mongodb",
    type: TechType.database,
  },
  {
    name: "NextJS",
    content: content.nextJS,
    uri: uri.nextJS,
    route: "nextjs",
    canInvert: true,
    type: TechType.webDev,
  },
  {
    name: "Prisma",
    content: content.prisma,
    uri: uri.prisma,
    route: "prisma",
    canInvert: true,
    type: TechType.database,
  },
  {
    name: "Python",
    content: content.python,
    uri: uri.python,
    route: "python",
    type: TechType.programmingLang,
  },
  {
    name: "React Native",
    content: content.reactNative,
    uri: uri.reactNative,
    route: "react-native",
    canInvert: true,
    type: TechType.mobileDev,
  },
  {
    name: "React",
    content: content.react,
    uri: uri.react,
    route: "react",
    type: TechType.webDev,
  },
  {
    name: "Redis",
    content: content.redis,
    uri: uri.redis,
    route: "redis",
    type: TechType.database,
  },
  {
    name: "Rust",
    content: content.rust,
    uri: uri.rust,
    route: "rust",
    type: TechType.programmingLang,
  },
  {
    name: "SCSS",
    content: content.scss,
    uri: uri.scss,
    route: "scss",
    type: TechType.styleSheet,
  },
  {
    name: "SQL",
    content: content.sql,
    uri: uri.sql,
    route: "sql",
    type: TechType.database,
  },
  {
    name: "Tailwind CSS",
    content: content.tailwindCSS,
    uri: uri.tailwindCSS,
    route: "tailwind-css",
    type: TechType.styleSheet,
  },
  {
    name: "Tanstack Query",
    content: content.tanstackQuery,
    uri: uri.tanstackQuery,
    route: "tanstack-query",
    type: TechType.others,
  },
  {
    name: "Tauri",
    content: content.tauri,
    uri: uri.tauri,
    route: "tauri",
    type: TechType.desktopDev,
  },
  {
    name: "Typescript",
    content: content.typescript,
    uri: uri.typescript,
    route: "typescript",
    type: TechType.programmingLang,
  },
  {
    name: "Zod",
    content: content.zod,
    uri: uri.zod,
    route: "zod",
    type: TechType.others,
  },
];
